//
//  ChatsWorker.swift
//  Kiwari-ios-test
//
//  Created by daniel on 08/05/20.
//  Copyright (c) 2020 Daniel. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class ChatsWorker
{
    func changeListener(completion: @escaping (_ chat: Chat?) -> ()) {
        FirebaseConstans.refs.databaseChats.order(by: "time", descending: false).addSnapshotListener { documentSnapshot, error in
            if let snapshot = documentSnapshot {
                for dc in snapshot.documentChanges {
                    switch dc.type {
                    case .added:
                        let chat = Chat(doc: dc.document.data())
                        if AppState.sharedInstance.isFirstListener() {
                             print(dc.document.data())
                            completion(chat)
                        }
                        
                    case .modified: break
                        
                    case .removed: break
                        
                    }
                    
                }
                UserStorage.saveFireListener(state: true)
            }
        }
    }
    
    func getCollection(completion: @escaping (_ chats: [Chat]) -> ()) {
        FirebaseConstans.refs.databaseChats.order(by: "time", descending:  false).getDocuments{ query, err in
            if let err = err {
                   print("Error getting documents: \(err)")
               } else {
                var data = [Chat]()
                   for document in query!.documents {
                    let chat = Chat(doc: document.data())
                    data.append(chat)
                   }
                completion(data)
               }
            
        }
    }
}
